name: "Astro Deploy"
description: "A composite action that prepares your Astro site to be deployed to GitHub Pages"
branding:
  icon: "arrow-up-right"
  color: "purple"
inputs:
  node-version:
    description: "The node version to use"
    required: false
    default: "20"
  package-manager:
    description: "You may specify your preferred package manager (one of `npm | yarn | pnpm | bun` and an optional `@<version>` tag). Otherwise, the package manager will be automatically detected."
    required: false
    default: ""
  path:
    description: "Path of the directory containing your site"
    required: false
    default: "."

runs:
  using: composite
  steps:
    - name: Check lockfiles
      shell: "bash"
      working-directory: ${{ inputs.path }}
      env:
        INPUT_PM: ${{ inputs.package-manager }}
      run: |
        len=`echo $INPUT_PM | wc -c`
        if [ $len -gt 1 ]; then
          PACKAGE_MANAGER=$(echo "$INPUT_PM" | grep -o '^[^@]*')
          VERSION=$(echo "$INPUT_PM" | grep -o '@.*' | sed 's/^@//')
          # Set default VERSION if not provided
          if [ -z "$VERSION" ]; then
              VERSION="latest"
          fi
          echo "PACKAGE_MANAGER=$PACKAGE_MANAGER" >> $GITHUB_ENV
        elif [ $(find "." -name "pnpm-lock.yaml") ]; then
            echo "PACKAGE_MANAGER=pnpm" >> $GITHUB_ENV
            echo "LOCKFILE=pnpm-lock.yaml" >> $GITHUB_ENV
        elif [ $(find "." -name "yarn.lock") ]; then 
            echo "PACKAGE_MANAGER=yarn" >> $GITHUB_ENV
            echo "LOCKFILE=yarn.lock" >> $GITHUB_ENV
        elif [ $(find "." -name "package-lock.json") ]; then 
            VERSION="latest"
            echo "PACKAGE_MANAGER=npm" >> $GITHUB_ENV
            echo "LOCKFILE=package-lock.json" >> $GITHUB_ENV
        elif [ $(find "." -name "bun.lockb") ]; then 
            VERSION="latest"
            echo "PACKAGE_MANAGER=bun" >> $GITHUB_ENV
            echo "LOCKFILE=bun.lockb" >> $GITHUB_ENV
        else
            echo "No lockfile found.
        Please specify your preferred \"package-manager\" in the action configuration."
            exit 1
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Setup PNPM
      if: ${{ env.PACKAGE_MANAGER == 'pnpm' }}
      uses: pnpm/action-setup@v3
      with:
        version: ${{ env.VERSION }}
    
    - name: Setup Bun
      if: ${{ env.PACKAGE_MANAGER == 'bun' }}
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ env.VERSION }}

    - name: Setup Node
      uses: actions/setup-node@v4
      if: ${{ env.PACKAGE_MANAGER != 'bun' }}
      with:
        node-version: ${{ inputs.node-version }}
        cache: ${{ env.PACKAGE_MANAGER }}
        cache-dependency-path: "${{ inputs.path }}/${{ env.LOCKFILE }}"
    
    - name: Setup Node (Bun)
      uses: actions/setup-node@v4
      if: ${{ env.PACKAGE_MANAGER == 'bun' }}
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install
      shell: "bash"
      working-directory: ${{ inputs.path }}
      run: $PACKAGE_MANAGER install

    - name: Build
      shell: "bash"
      working-directory: ${{ inputs.path }}
      run: $PACKAGE_MANAGER run build

    - name: Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: "${{ inputs.path }}/dist/"
